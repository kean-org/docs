{"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/nuke\/avdataasset","title":"AVDataAsset","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/operation\/executing","title":"executing","type":"property"},{"path":"\/documentation\/nuke\/operation\/finished","title":"finished","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/operation\/start","title":"start","type":"method"}],"path":"\/documentation\/nuke\/operation","title":"Operation","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/nuke_imagedisplaying\/nuke_display(image:data:)","title":"nuke_displayWithImage:data:","type":"method"}],"path":"\/documentation\/nuke\/nuke_imagedisplaying","title":"Nuke_ImageDisplaying","type":"protocol"}],"path":"\/documentation\/nuke","title":"Nuke","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/datacache\/init(name:filenamegenerator:)","title":"init(name: String, filenameGenerator: (String) -> String?) throws","type":"init"},{"path":"\/documentation\/nuke\/datacache\/init(path:filenamegenerator:)","title":"init(path: URL, filenameGenerator: (String) -> String?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/datacache\/path","title":"let path: URL","type":"property"},{"path":"\/documentation\/nuke\/datacache\/queue","title":"let queue: DispatchQueue","type":"property"},{"path":"\/documentation\/nuke\/datacache\/sizelimit","title":"var sizeLimit: Int","type":"property"},{"path":"\/documentation\/nuke\/datacache\/sweepinterval","title":"var sweepInterval: TimeInterval","type":"property"},{"path":"\/documentation\/nuke\/datacache\/totalallocatedsize","title":"var totalAllocatedSize: Int","type":"property"},{"path":"\/documentation\/nuke\/datacache\/totalcount","title":"var totalCount: Int","type":"property"},{"path":"\/documentation\/nuke\/datacache\/totalsize","title":"var totalSize: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/datacache\/cacheddata(for:)","title":"func cachedData(for: Key) -> Data?","type":"method"},{"path":"\/documentation\/nuke\/datacache\/containsdata(for:)","title":"func containsData(for: String) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/datacache\/filename(for:)-swift.method","title":"func filename(for: Key) -> String?","type":"method"},{"path":"\/documentation\/nuke\/datacache\/flush()","title":"func flush()","type":"method"},{"path":"\/documentation\/nuke\/datacache\/flush(for:)","title":"func flush(for: Key)","type":"method"},{"path":"\/documentation\/nuke\/datacache\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/nuke\/datacache\/removedata(for:)","title":"func removeData(for: Key)","type":"method"},{"path":"\/documentation\/nuke\/datacache\/storedata(_:for:)","title":"func storeData(Data, for: Key)","type":"method"},{"path":"\/documentation\/nuke\/datacache\/sweep()","title":"func sweep()","type":"method"},{"path":"\/documentation\/nuke\/datacache\/url(for:)","title":"func url(for: Key) -> URL?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nuke\/datacache\/subscript(_:)","title":"subscript(Key) -> Data?","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nuke\/datacache\/filenamegenerator","title":"DataCache.FilenameGenerator","type":"typealias"},{"path":"\/documentation\/nuke\/datacache\/key","title":"DataCache.Key","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/datacache\/filename(for:)-swift.type.method","title":"static func filename(for: String) -> String?","type":"method"}],"path":"\/documentation\/nuke\/datacache","title":"DataCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/init(configuration:validate:)","title":"init(configuration: URLSessionConfiguration, validate: (URLResponse) -> Swift.Error?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/observer","title":"var observer: DataLoaderObserving?","type":"property"},{"path":"\/documentation\/nuke\/dataloader\/session","title":"let session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/loaddata(with:didreceivedata:completion:)","title":"func loadData(with: URLRequest, didReceiveData: (Data, URLResponse) -> Void, completion: (Swift.Error?) -> Void) -> Cancellable","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/defaultconfiguration","title":"static var defaultConfiguration: URLSessionConfiguration","type":"property"},{"path":"\/documentation\/nuke\/dataloader\/sharedurlcache","title":"static let sharedUrlCache: URLCache","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/validate(response:)","title":"static func validate(response: URLResponse) -> Swift.Error?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/error\/statuscodeunacceptable(_:)","title":"case statusCodeUnacceptable(Int)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/error\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloader\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nuke\/dataloader\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/dataloader\/error","title":"DataLoader.Error","type":"enum"}],"path":"\/documentation\/nuke\/dataloader","title":"DataLoader","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimage\/progress-swift.struct\/completed","title":"let completed: Int64","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/progress-swift.struct\/total","title":"let total: Int64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimage\/progress-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/fetchimage\/progress-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/fetchimage\/progress-swift.struct","title":"FetchImage.Progress","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimage\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimage\/animation","title":"var animation: Animation?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/image","title":"var image: PlatformImage?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/imagecontainer","title":"var imageContainer: ImageContainer?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/isloading","title":"var isLoading: Bool","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/oncompletion","title":"var onCompletion: ((_ result: Result<ImageResponse, Error>) -> Void)?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/onfailure","title":"var onFailure: ((_ response: Error) -> Void)?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/onprogress","title":"var onProgress: ((_ response: ImageResponse?, _ completed: Int64, _ total: Int64) -> Void)?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/onstart","title":"var onStart: ((_ task: ImageTask) -> Void)?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/onsuccess","title":"var onSuccess: ((_ response: ImageResponse) -> Void)?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/pipeline","title":"var pipeline: ImagePipeline","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/priority","title":"var priority: ImageRequest.Priority?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/processors","title":"var processors: [ImageProcessing]","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/progress-swift.property","title":"var progress: FetchImage.Progress","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/result","title":"var result: Result<ImageResponse, Error>?","type":"property"},{"path":"\/documentation\/nuke\/fetchimage\/view","title":"var view: SwiftUI.Image?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimage\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/nuke\/fetchimage\/load(_:)-7229b","title":"func load(() async throws -> ImageResponse)","type":"method"},{"path":"\/documentation\/nuke\/fetchimage\/load(_:)-8fmd","title":"func load<P>(P)","type":"method"},{"path":"\/documentation\/nuke\/fetchimage\/load(_:)-9o3a2","title":"func load(ImageRequestConvertible?)","type":"method"},{"path":"\/documentation\/nuke\/fetchimage\/reset()","title":"func reset()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimage\/id","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/nuke\/fetchimage\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimage\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/nuke\/fetchimage\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/fetchimage","title":"FetchImage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecache\/init(costlimit:countlimit:)","title":"init(costLimit: Int, countLimit: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecache\/costlimit","title":"var costLimit: Int","type":"property"},{"path":"\/documentation\/nuke\/imagecache\/countlimit","title":"var countLimit: Int","type":"property"},{"path":"\/documentation\/nuke\/imagecache\/entrycostlimit","title":"var entryCostLimit: Double","type":"property"},{"path":"\/documentation\/nuke\/imagecache\/totalcost","title":"var totalCost: Int","type":"property"},{"path":"\/documentation\/nuke\/imagecache\/totalcount","title":"var totalCount: Int","type":"property"},{"path":"\/documentation\/nuke\/imagecache\/ttl","title":"var ttl: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecache\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/nuke\/imagecache\/trim(tocost:)","title":"func trim(toCost: Int)","type":"method"},{"path":"\/documentation\/nuke\/imagecache\/trim(tocount:)","title":"func trim(toCount: Int)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecache\/subscript(_:)-8jtyy","title":"subscript(ImageCacheKey) -> ImageContainer?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecache\/shared","title":"static let shared: ImageCache","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecache\/defaultcostlimit()","title":"static func defaultCostLimit() -> Int","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecache\/subscript(_:)-45nyw","title":"subscript(ImageRequestConvertible) -> ImageContainer?","type":"subscript"}],"path":"\/documentation\/nuke\/imagecache\/imagecaching-implementations","title":"ImageCaching Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagecache","title":"ImageCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoderregistry\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoderregistry\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/nuke\/imagedecoderregistry\/decoder(for:)","title":"func decoder(for: ImageDecodingContext) -> ImageDecoding?","type":"method"},{"path":"\/documentation\/nuke\/imagedecoderregistry\/register(_:)-8diym","title":"func register<Decoder>(Decoder.Type)","type":"method"},{"path":"\/documentation\/nuke\/imagedecoderregistry\/register(_:)-9j2zm","title":"func register((ImageDecodingContext) -> ImageDecoding?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoderregistry\/shared","title":"static let shared: ImageDecoderRegistry","type":"property"}],"path":"\/documentation\/nuke\/imagedecoderregistry","title":"ImageDecoderRegistry","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/all","title":"static let all: Caches","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/disk","title":"static let disk: ImagePipeline.Cache.Caches","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/memory","title":"static let memory: ImagePipeline.Cache.Caches","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/caches","title":"ImagePipeline.Cache.Caches","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/cacheddata(for:)","title":"func cachedData(for: ImageRequestConvertible) -> Data?","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/cachedimage(for:caches:)","title":"func cachedImage(for: ImageRequestConvertible, caches: Caches) -> ImageContainer?","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/containscachedimage(for:caches:)","title":"func containsCachedImage(for: ImageRequestConvertible, caches: Caches) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/containsdata(for:)","title":"func containsData(for: ImageRequestConvertible) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/makedatacachekey(for:)","title":"func makeDataCacheKey(for: ImageRequestConvertible) -> String","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/makeimagecachekey(for:)","title":"func makeImageCacheKey(for: ImageRequestConvertible) -> ImageCacheKey","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/removeall(caches:)","title":"func removeAll(caches: Caches)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/removecacheddata(for:)","title":"func removeCachedData(for: ImageRequestConvertible)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/removecachedimage(for:caches:)","title":"func removeCachedImage(for: ImageRequestConvertible, caches: Caches)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/storecacheddata(_:for:)","title":"func storeCachedData(Data, for: ImageRequestConvertible)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/storecachedimage(_:for:caches:)","title":"func storeCachedImage(ImageContainer, for: ImageRequestConvertible, caches: Caches)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct\/subscript(_:)","title":"subscript(ImageRequestConvertible) -> ImageContainer?","type":"subscript"}],"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.struct","title":"ImagePipeline.Cache","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/init(dataloader:)","title":"init(dataLoader: DataLoading)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/callbackqueue","title":"var callbackQueue: DispatchQueue","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacache","title":"var dataCache: DataCaching?","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.property","title":"var dataCachePolicy: ImagePipeline.Configuration.DataCachePolicy","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachingqueue","title":"var dataCachingQueue: OperationQueue","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/dataloader","title":"var dataLoader: DataLoading","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/dataloadingqueue","title":"var dataLoadingQueue: OperationQueue","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/imagecache","title":"var imageCache: ImageCaching?","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/imagedecodingqueue","title":"var imageDecodingQueue: OperationQueue","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/imagedecompressingqueue","title":"var imageDecompressingQueue: OperationQueue","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/imageencodingqueue","title":"var imageEncodingQueue: OperationQueue","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/imageprocessingqueue","title":"var imageProcessingQueue: OperationQueue","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/isdecompressionenabled","title":"var isDecompressionEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/isprogressivedecodingenabled","title":"var isProgressiveDecodingEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/isratelimiterenabled","title":"var isRateLimiterEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/isresumabledataenabled","title":"var isResumableDataEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/isstoringpreviewsinmemorycache","title":"var isStoringPreviewsInMemoryCache: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/istaskcoalescingenabled","title":"var isTaskCoalescingEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/makeimagedecoder","title":"var makeImageDecoder: (ImageDecodingContext) -> ImageDecoding?","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/makeimageencoder","title":"var makeImageEncoder: (ImageEncodingContext) -> ImageEncoding","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/issignpostloggingenabled","title":"static var isSignpostLoggingEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/withdatacache","title":"static var withDataCache: Configuration","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/withurlcache","title":"static var withURLCache: Configuration","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.enum\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.enum\/storeall","title":"case storeAll","type":"case"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.enum\/storeencodedimages","title":"case storeEncodedImages","type":"case"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.enum\/storeoriginaldata","title":"case storeOriginalData","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct\/datacachepolicy-swift.enum","title":"ImagePipeline.Configuration.DataCachePolicy","type":"enum"}],"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.struct","title":"ImagePipeline.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/init(configuration:delegate:)","title":"init(configuration: Configuration, delegate: ImagePipelineDelegate?)","type":"init"},{"path":"\/documentation\/nuke\/imagepipeline\/init(delegate:_:)","title":"init(delegate: ImagePipelineDelegate?, (inout ImagePipeline.Configuration) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/cache-swift.property","title":"var cache: ImagePipeline.Cache","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/data(for:)","title":"func data(for: ImageRequestConvertible) async throws -> (Data, URLResponse?)","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/image(for:)","title":"func image(for: ImageRequestConvertible) async throws -> ImageResponse","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/imagepublisher(with:)","title":"func imagePublisher(with: ImageRequestConvertible) -> ImagePublisher","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/invalidate()","title":"func invalidate()","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/loaddata(with:completion:)","title":"func loadData(with: ImageRequestConvertible, completion: (Result<(data: Data, response: URLResponse?), Error>) -> Void) -> ImageTask","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/loaddata(with:queue:progress:completion:)","title":"func loadData(with: ImageRequestConvertible, queue: DispatchQueue?, progress: ((_ completed: Int64, _ total: Int64) -> Void)?, completion: (Result<(data: Data, response: URLResponse?), Error>) -> Void) -> ImageTask","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/loadimage(with:completion:)","title":"func loadImage(with: ImageRequestConvertible, completion: (_ result: Result<ImageResponse, Error>) -> Void) -> ImageTask","type":"method"},{"path":"\/documentation\/nuke\/imagepipeline\/loadimage(with:queue:progress:completion:)","title":"func loadImage(with: ImageRequestConvertible, queue: DispatchQueue?, progress: ((_ response: ImageResponse?, _ completed: Int64, _ total: Int64) -> Void)?, completion: ((_ result: Result<ImageResponse, Error>) -> Void)) -> ImageTask","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/shared","title":"static var shared: ImagePipeline","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/error\/dataloadingfailed(_:)","title":"case dataLoadingFailed(Swift.Error)","type":"case"},{"path":"\/documentation\/nuke\/imagepipeline\/error\/decodingfailed(_:)","title":"case decodingFailed(Data)","type":"case"},{"path":"\/documentation\/nuke\/imagepipeline\/error\/processingfailed(_:)","title":"case processingFailed(ImageProcessing)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/error\/dataloadingerror","title":"var dataLoadingError: Swift.Error?","type":"property"},{"path":"\/documentation\/nuke\/imagepipeline\/error\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepipeline\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nuke\/imagepipeline\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagepipeline\/error","title":"ImagePipeline.Error","type":"enum"}],"path":"\/documentation\/nuke\/imagepipeline","title":"ImagePipeline","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprefetcher\/init(pipeline:destination:maxconcurrentrequestcount:)","title":"init(pipeline: ImagePipeline, destination: Destination, maxConcurrentRequestCount: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprefetcher\/didcomplete","title":"var didComplete: (() -> Void)?","type":"property"},{"path":"\/documentation\/nuke\/imageprefetcher\/ispaused","title":"var isPaused: Bool","type":"property"},{"path":"\/documentation\/nuke\/imageprefetcher\/priority","title":"var priority: ImageRequest.Priority","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprefetcher\/startprefetching(with:)","title":"func startPrefetching(with: [ImageRequestConvertible])","type":"method"},{"path":"\/documentation\/nuke\/imageprefetcher\/stopprefetching()","title":"func stopPrefetching()","type":"method"},{"path":"\/documentation\/nuke\/imageprefetcher\/stopprefetching(with:)","title":"func stopPrefetching(with: [ImageRequestConvertible])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprefetcher\/destination\/diskcache","title":"case diskCache","type":"case"},{"path":"\/documentation\/nuke\/imageprefetcher\/destination\/memorycache","title":"case memoryCache","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprefetcher\/destination\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprefetcher\/destination\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprefetcher\/destination","title":"ImagePrefetcher.Destination","type":"enum"}],"path":"\/documentation\/nuke\/imageprefetcher","title":"ImagePrefetcher","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagetask\/==(_:_:)","title":"static func == (ImageTask, ImageTask) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagetask\/completedunitcount","title":"var completedUnitCount: Int64","type":"property"},{"path":"\/documentation\/nuke\/imagetask\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imagetask\/priority","title":"var priority: ImageRequest.Priority","type":"property"},{"path":"\/documentation\/nuke\/imagetask\/progress","title":"var progress: Progress","type":"property"},{"path":"\/documentation\/nuke\/imagetask\/request","title":"let request: ImageRequest","type":"property"},{"path":"\/documentation\/nuke\/imagetask\/taskid","title":"let taskId: Int64","type":"property"},{"path":"\/documentation\/nuke\/imagetask\/totalunitcount","title":"var totalUnitCount: Int64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagetask\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/nuke\/imagetask\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagetask\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagetask\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagetask","title":"ImageTask","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/cancellable\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/nuke\/cancellable","title":"Cancellable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/datacaching\/cacheddata(for:)","title":"func cachedData(for: String) -> Data?","type":"method"},{"path":"\/documentation\/nuke\/datacaching\/containsdata(for:)","title":"func containsData(for: String) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/datacaching\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/nuke\/datacaching\/removedata(for:)","title":"func removeData(for: String)","type":"method"},{"path":"\/documentation\/nuke\/datacaching\/storedata(_:for:)","title":"func storeData(Data, for: String)","type":"method"}],"path":"\/documentation\/nuke\/datacaching","title":"DataCaching","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloaderobserving\/dataloader(_:urlsession:datatask:didreceiveevent:)","title":"func dataLoader(DataLoader, urlSession: URLSession, dataTask: URLSessionDataTask, didReceiveEvent: DataTaskEvent)","type":"method"}],"path":"\/documentation\/nuke\/dataloaderobserving","title":"DataLoaderObserving","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/dataloading\/loaddata(with:didreceivedata:completion:)","title":"func loadData(with: URLRequest, didReceiveData: (Data, URLResponse) -> Void, completion: (Error?) -> Void) -> Cancellable","type":"method"}],"path":"\/documentation\/nuke\/dataloading","title":"DataLoading","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecaching\/removeall()","title":"func removeAll()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagecaching\/subscript(_:)-9s365","title":"subscript(ImageRequestConvertible) -> ImageContainer?","type":"subscript"}],"title":"ImageCaching Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagecaching\/subscript(_:)-l5t6","title":"subscript(ImageCacheKey) -> ImageContainer?","type":"subscript"}],"path":"\/documentation\/nuke\/imagecaching","title":"ImageCaching","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoderregistering\/init(data:context:)","title":"init?(data: Data, context: ImageDecodingContext)","type":"init"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagedecoderregistering\/init(partiallydownloadeddata:context:)-8ark","title":"init?(partiallyDownloadedData: Data, context: ImageDecodingContext)","type":"init"}],"title":"ImageDecoderRegistering Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagedecoderregistering\/init(partiallydownloadeddata:context:)-7zrtc","title":"init?(partiallyDownloadedData: Data, context: ImageDecodingContext)","type":"init"}],"path":"\/documentation\/nuke\/imagedecoderregistering","title":"ImageDecoderRegistering","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagedecoding\/isasynchronous-6debz","title":"var isAsynchronous: Bool","type":"property"}],"title":"ImageDecoding Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagedecoding\/isasynchronous-5omd7","title":"var isAsynchronous: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoding\/decode(_:)","title":"func decode(Data) -> ImageContainer?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagedecoding\/decodepartiallydownloadeddata(_:)-1r64t","title":"func decodePartiallyDownloadedData(Data) -> ImageContainer?","type":"method"}],"title":"ImageDecoding Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagedecoding\/decodepartiallydownloadeddata(_:)-9budu","title":"func decodePartiallyDownloadedData(Data) -> ImageContainer?","type":"method"}],"path":"\/documentation\/nuke\/imagedecoding","title":"ImageDecoding","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoding\/encode(_:)","title":"func encode(PlatformImage) -> Data?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imageencoding\/encode(_:context:)-1p65k","title":"func encode(ImageContainer, context: ImageEncodingContext) -> Data?","type":"method"}],"title":"ImageEncoding Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imageencoding\/encode(_:context:)-9hfno","title":"func encode(ImageContainer, context: ImageEncodingContext) -> Data?","type":"method"}],"path":"\/documentation\/nuke\/imageencoding","title":"ImageEncoding","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagepipelinedelegate\/cachekey(for:pipeline:)-70b9o","title":"func cacheKey(for: ImageRequest, pipeline: ImagePipeline) -> String?","type":"method"}],"title":"ImagePipelineDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagepipelinedelegate\/cachekey(for:pipeline:)-8k9a4","title":"func cacheKey(for: ImageRequest, pipeline: ImagePipeline) -> String?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagepipelinedelegate\/datacache(for:pipeline:)-1lzze","title":"func dataCache(for: ImageRequest, pipeline: ImagePipeline) -> DataCaching?","type":"method"}],"title":"ImagePipelineDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagepipelinedelegate\/datacache(for:pipeline:)-2lnae","title":"func dataCache(for: ImageRequest, pipeline: ImagePipeline) -> DataCaching?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagepipelinedelegate\/dataloader(for:pipeline:)-1wywv","title":"func dataLoader(for: ImageRequest, pipeline: ImagePipeline) -> DataLoading","type":"method"}],"title":"ImagePipelineDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagepipelinedelegate\/dataloader(for:pipeline:)-7xolj","title":"func dataLoader(for: ImageRequest, pipeline: ImagePipeline) -> DataLoading","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagepipelinedelegate\/imagedecoder(for:pipeline:)-38ejq","title":"func imageDecoder(for: ImageDecodingContext, pipeline: ImagePipeline) -> ImageDecoding?","type":"method"}],"title":"ImagePipelineDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagepipelinedelegate\/imagedecoder(for:pipeline:)-2rbkl","title":"func imageDecoder(for: ImageDecodingContext, pipeline: ImagePipeline) -> ImageDecoding?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagepipelinedelegate\/imageencoder(for:pipeline:)-2x8ei","title":"func imageEncoder(for: ImageEncodingContext, pipeline: ImagePipeline) -> ImageEncoding","type":"method"}],"title":"ImagePipelineDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagepipelinedelegate\/imageencoder(for:pipeline:)-6uxsr","title":"func imageEncoder(for: ImageEncodingContext, pipeline: ImagePipeline) -> ImageEncoding","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagepipelinedelegate\/pipeline(_:imagetask:didreceiveevent:)-8u0w8","title":"func pipeline(ImagePipeline, imageTask: ImageTask, didReceiveEvent: ImageTaskEvent)","type":"method"}],"title":"ImagePipelineDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagepipelinedelegate\/pipeline(_:imagetask:didreceiveevent:)-1j539","title":"func pipeline(ImagePipeline, imageTask: ImageTask, didReceiveEvent: ImageTaskEvent)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imagepipelinedelegate\/willcache(data:image:for:pipeline:completion:)-1n1yp","title":"func willCache(data: Data, image: ImageContainer?, for: ImageRequest, pipeline: ImagePipeline, completion: (Data?) -> Void)","type":"method"}],"title":"ImagePipelineDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imagepipelinedelegate\/willcache(data:image:for:pipeline:completion:)-7eg0n","title":"func willCache(data: Data, image: ImageContainer?, for: ImageRequest, pipeline: ImagePipeline, completion: (Data?) -> Void)","type":"method"}],"path":"\/documentation\/nuke\/imagepipelinedelegate","title":"ImagePipelineDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imageprocessing\/hashableidentifier-2i3a7","title":"var hashableIdentifier: AnyHashable","type":"property"}],"title":"ImageProcessing Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imageprocessing\/hashableidentifier-7543e","title":"var hashableIdentifier: AnyHashable","type":"property"},{"path":"\/documentation\/nuke\/imageprocessing\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessing\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nuke\/imageprocessing\/process(_:context:)-5sfn3","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"}],"title":"ImageProcessing Implementations","type":"groupMarker"}],"path":"\/documentation\/nuke\/imageprocessing\/process(_:context:)-24zuk","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessing\/circle(border:)","title":"static func circle(border: ImageProcessingOptions.Border?) -> ImageProcessors.Circle","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/coreimagefilter(name:)","title":"static func coreImageFilter(name: String) -> ImageProcessors.CoreImageFilter","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/coreimagefilter(name:parameters:identifier:)","title":"static func coreImageFilter(name: String, parameters: [String : Any], identifier: String) -> ImageProcessors.CoreImageFilter","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/gaussianblur(radius:)","title":"static func gaussianBlur(radius: Int) -> ImageProcessors.GaussianBlur","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/process(id:_:)","title":"static func process(id: String, (PlatformImage) -> PlatformImage?) -> ImageProcessors.Anonymous","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/resize(height:unit:upscale:)","title":"static func resize(height: CGFloat, unit: ImageProcessingOptions.Unit, upscale: Bool) -> ImageProcessors.Resize","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/resize(size:unit:contentmode:crop:upscale:)","title":"static func resize(size: CGSize, unit: ImageProcessingOptions.Unit, contentMode: ImageProcessors.Resize.ContentMode, crop: Bool, upscale: Bool) -> ImageProcessors.Resize","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/resize(width:unit:upscale:)","title":"static func resize(width: CGFloat, unit: ImageProcessingOptions.Unit, upscale: Bool) -> ImageProcessors.Resize","type":"method"},{"path":"\/documentation\/nuke\/imageprocessing\/roundedcorners(radius:unit:border:)","title":"static func roundedCorners(radius: CGFloat, unit: ImageProcessingOptions.Unit, border: ImageProcessingOptions.Border?) -> ImageProcessors.RoundedCorners","type":"method"}],"path":"\/documentation\/nuke\/imageprocessing","title":"ImageProcessing","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequestconvertible\/asimagerequest()","title":"func asImageRequest() -> ImageRequest","type":"method"}],"path":"\/documentation\/nuke\/imagerequestconvertible","title":"ImageRequestConvertible","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/nuke_imagedisplaying\/nuke_display(image:data:)","title":"func nuke_display(image: PlatformImage?, data: Data?)","type":"method"}],"path":"\/documentation\/nuke\/nuke_imagedisplaying","title":"Nuke_ImageDisplaying","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/assettype\/init(_:)","title":"init?(Data)","type":"init"},{"path":"\/documentation\/nuke\/assettype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/nuke\/assettype\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/assettype\/isvideo","title":"var isVideo: Bool","type":"property"},{"path":"\/documentation\/nuke\/assettype\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/assettype\/gif","title":"static let gif: AssetType","type":"property"},{"path":"\/documentation\/nuke\/assettype\/heic","title":"static let heic: AssetType","type":"property"},{"path":"\/documentation\/nuke\/assettype\/jpeg","title":"static let jpeg: AssetType","type":"property"},{"path":"\/documentation\/nuke\/assettype\/m4v","title":"static let m4v: AssetType","type":"property"},{"path":"\/documentation\/nuke\/assettype\/mov","title":"static let mov: AssetType","type":"property"},{"path":"\/documentation\/nuke\/assettype\/mp4","title":"static let mp4: AssetType","type":"property"},{"path":"\/documentation\/nuke\/assettype\/png","title":"static let png: AssetType","type":"property"},{"path":"\/documentation\/nuke\/assettype\/webp","title":"static let webp: AssetType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/assettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/assettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/assettype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/nuke\/assettype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/assettype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/nuke\/assettype\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/assettype","title":"AssetType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecachekey\/init(key:)","title":"init(key: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecachekey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagecachekey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagecachekey","title":"ImageCacheKey","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/scannumberkey","title":"static let scanNumberKey: UserInfoKey","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/nuke\/imagecontainer\/userinfokey\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagecontainer\/userinfokey","title":"ImageContainer.UserInfoKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/init(image:type:ispreview:data:userinfo:)","title":"init(image: PlatformImage, type: AssetType?, isPreview: Bool, data: Data?, userInfo: [UserInfoKey : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/asset","title":"var asset: AVAsset?","type":"property"},{"path":"\/documentation\/nuke\/imagecontainer\/data","title":"var data: Data?","type":"property"},{"path":"\/documentation\/nuke\/imagecontainer\/image","title":"var image: UIImage","type":"property"},{"path":"\/documentation\/nuke\/imagecontainer\/ispreview","title":"var isPreview: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagecontainer\/type","title":"var type: AssetType?","type":"property"},{"path":"\/documentation\/nuke\/imagecontainer\/userinfo","title":"var userInfo: [UserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagecontainer\/map(_:)","title":"func map((PlatformImage) -> PlatformImage?) -> ImageContainer?","type":"method"}],"path":"\/documentation\/nuke\/imagecontainer","title":"ImageContainer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecodingcontext\/init(request:data:iscompleted:urlresponse:)","title":"init(request: ImageRequest, data: Data, isCompleted: Bool, urlResponse: URLResponse?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecodingcontext\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/nuke\/imagedecodingcontext\/iscompleted","title":"let isCompleted: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagedecodingcontext\/request","title":"let request: ImageRequest","type":"property"},{"path":"\/documentation\/nuke\/imagedecodingcontext\/urlresponse","title":"let urlResponse: URLResponse?","type":"property"}],"path":"\/documentation\/nuke\/imagedecodingcontext","title":"ImageDecodingContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencodingcontext\/image","title":"let image: PlatformImage","type":"property"},{"path":"\/documentation\/nuke\/imageencodingcontext\/request","title":"let request: ImageRequest","type":"property"},{"path":"\/documentation\/nuke\/imageencodingcontext\/urlresponse","title":"let urlResponse: URLResponse?","type":"property"}],"path":"\/documentation\/nuke\/imageencodingcontext","title":"ImageEncodingContext","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/contentmodes-swift.struct\/init(success:failure:placeholder:)","title":"init(success: UIView.ContentMode, failure: UIView.ContentMode, placeholder: UIView.ContentMode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/contentmodes-swift.struct\/failure","title":"var failure: UIView.ContentMode","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/contentmodes-swift.struct\/placeholder","title":"var placeholder: UIView.ContentMode","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/contentmodes-swift.struct\/success","title":"var success: UIView.ContentMode","type":"property"}],"path":"\/documentation\/nuke\/imageloadingoptions\/contentmodes-swift.struct","title":"ImageLoadingOptions.ContentModes","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/tintcolors-swift.struct\/init(success:failure:placeholder:)","title":"init(success: UIColor?, failure: UIColor?, placeholder: UIColor?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/tintcolors-swift.struct\/failure","title":"var failure: UIColor?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/tintcolors-swift.struct\/placeholder","title":"var placeholder: UIColor?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/tintcolors-swift.struct\/success","title":"var success: UIColor?","type":"property"}],"path":"\/documentation\/nuke\/imageloadingoptions\/tintcolors-swift.struct","title":"ImageLoadingOptions.TintColors","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/transition-swift.struct\/custom(_:)","title":"static func custom((ImageDisplayingView, UIImage) -> Void) -> Transition","type":"method"},{"path":"\/documentation\/nuke\/imageloadingoptions\/transition-swift.struct\/fadein(duration:options:)","title":"static func fadeIn(duration: TimeInterval, options: UIView.AnimationOptions) -> Transition","type":"method"}],"path":"\/documentation\/nuke\/imageloadingoptions\/transition-swift.struct","title":"ImageLoadingOptions.Transition","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/nuke\/imageloadingoptions\/init(placeholder:transition:failureimage:failureimagetransition:contentmodes:tintcolors:)","title":"init(placeholder: UIImage?, transition: Transition?, failureImage: UIImage?, failureImageTransition: Transition?, contentModes: ContentModes?, tintColors: TintColors?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/alwaystransition","title":"var alwaysTransition: Bool","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/contentmodes-swift.property","title":"var contentModes: ContentModes?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/failureimage","title":"var failureImage: PlatformImage?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/failureimagetransition","title":"var failureImageTransition: Transition?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/isprepareforreuseenabled","title":"var isPrepareForReuseEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/isprogressiverenderingenabled","title":"var isProgressiveRenderingEnabled: Bool","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/pipeline","title":"var pipeline: ImagePipeline?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/placeholder","title":"var placeholder: PlatformImage?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/processors","title":"var processors: [ImageProcessing]","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/tintcolors-swift.property","title":"var tintColors: TintColors?","type":"property"},{"path":"\/documentation\/nuke\/imageloadingoptions\/transition-swift.property","title":"var transition: Transition?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageloadingoptions\/shared","title":"static var shared: ImageLoadingOptions","type":"property"}],"path":"\/documentation\/nuke\/imageloadingoptions","title":"ImageLoadingOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingcontext\/init(request:response:isfinal:)","title":"init(request: ImageRequest, response: ImageResponse, isFinal: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingcontext\/isfinal","title":"let isFinal: Bool","type":"property"},{"path":"\/documentation\/nuke\/imageprocessingcontext\/request","title":"let request: ImageRequest","type":"property"},{"path":"\/documentation\/nuke\/imageprocessingcontext\/response","title":"let response: ImageResponse","type":"property"}],"path":"\/documentation\/nuke\/imageprocessingcontext","title":"ImageProcessingContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepublisher\/init(request:pipeline:)","title":"init(request: ImageRequest, pipeline: ImagePipeline)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepublisher\/pipeline","title":"let pipeline: ImagePipeline","type":"property"},{"path":"\/documentation\/nuke\/imagepublisher\/request","title":"let request: ImageRequest","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepublisher\/receive(subscriber:)","title":"func receive<S>(subscriber: S)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepublisher\/failure","title":"ImagePublisher.Failure","type":"typealias"},{"path":"\/documentation\/nuke\/imagepublisher\/output","title":"ImagePublisher.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepublisher\/values","title":"var values: AsyncThrowingPublisher<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagepublisher\/allsatisfy(_:)","title":"func allSatisfy((Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/append(_:)-4hd1v","title":"func append<P>(P) -> Publishers.Concatenate<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/append(_:)-5qcbw","title":"func append<S>(S) -> Publishers.Concatenate<Self, Publishers.Sequence<S, Self.Failure>>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/append(_:)-80sj7","title":"func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/assertnofailure(_:file:line:)","title":"func assertNoFailure(String, file: StaticString, line: UInt) -> Publishers.AssertNoFailure<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/breakpoint(receivesubscription:receiveoutput:receivecompletion:)","title":"func breakpoint(receiveSubscription: ((Subscription) -> Bool)?, receiveOutput: ((Self.Output) -> Bool)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Bool)?) -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/breakpointonerror()","title":"func breakpointOnError() -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/buffer(size:prefetch:whenfull:)","title":"func buffer(size: Int, prefetch: Publishers.PrefetchStrategy, whenFull: Publishers.BufferingStrategy<Self.Failure>) -> Publishers.Buffer<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/catch(_:)","title":"func `catch`<P>((Self.Failure) -> P) -> Publishers.Catch<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/collect()","title":"func collect() -> Publishers.Collect<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/collect(_:)","title":"func collect(Int) -> Publishers.CollectByCount<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/collect(_:options:)","title":"func collect<S>(Publishers.TimeGroupingStrategy<S>, options: S.SchedulerOptions?) -> Publishers.CollectByTime<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/combinelatest(_:)","title":"func combineLatest<P>(P) -> Publishers.CombineLatest<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/combinelatest(_:_:)-13zow","title":"func combineLatest<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.CombineLatest<Self, P>, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/combinelatest(_:_:)-2gw9w","title":"func combineLatest<P, Q>(P, Q) -> Publishers.CombineLatest3<Self, P, Q>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/combinelatest(_:_:_:)-3xfck","title":"func combineLatest<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.CombineLatest3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/combinelatest(_:_:_:)-60ngm","title":"func combineLatest<P, Q, R>(P, Q, R) -> Publishers.CombineLatest4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/combinelatest(_:_:_:_:)","title":"func combineLatest<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.CombineLatest4<Self, P, Q, R>, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/compactmap(_:)","title":"func compactMap<T>((Self.Output) -> T?) -> Publishers.CompactMap<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/contains(where:)","title":"func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/count()","title":"func count() -> Publishers.Count<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/debounce(for:scheduler:options:)","title":"func debounce<S>(for: S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Debounce<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/decode(type:decoder:)","title":"func decode<Item, Coder>(type: Item.Type, decoder: Coder) -> Publishers.Decode<Self, Item, Coder>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/delay(for:tolerance:scheduler:options:)","title":"func delay<S>(for: S.SchedulerTimeType.Stride, tolerance: S.SchedulerTimeType.Stride?, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Delay<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/drop(untiloutputfrom:)","title":"func drop<P>(untilOutputFrom: P) -> Publishers.DropUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/drop(while:)","title":"func drop(while: (Self.Output) -> Bool) -> Publishers.DropWhile<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/dropfirst(_:)","title":"func dropFirst(Int) -> Publishers.Drop<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/erasetoanypublisher()","title":"func eraseToAnyPublisher() -> AnyPublisher<Self.Output, Self.Failure>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Publishers.Filter<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/first()","title":"func first() -> Publishers.First<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/first(where:)","title":"func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/flatmap(maxpublishers:_:)-378ba","title":"func flatMap<T, P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/flatmap(maxpublishers:_:)-4famj","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<Publishers.SetFailureType<P, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/handleevents(receivesubscription:receiveoutput:receivecompletion:receivecancel:receiverequest:)","title":"func handleEvents(receiveSubscription: ((Subscription) -> Void)?, receiveOutput: ((Self.Output) -> Void)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void)?, receiveCancel: (() -> Void)?, receiveRequest: ((Subscribers.Demand) -> Void)?) -> Publishers.HandleEvents<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/ignoreoutput()","title":"func ignoreOutput() -> Publishers.IgnoreOutput<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/last()","title":"func last() -> Publishers.Last<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/last(where:)","title":"func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/map(_:)-7hlw0","title":"func map<T>((Self.Output) -> T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/map(_:)-7vl3t","title":"func map<T>(KeyPath<Self.Output, T>) -> Publishers.MapKeyPath<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/map(_:_:)","title":"func map<T0, T1>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>) -> Publishers.MapKeyPath2<Self, T0, T1>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/map(_:_:_:)","title":"func map<T0, T1, T2>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>, KeyPath<Self.Output, T2>) -> Publishers.MapKeyPath3<Self, T0, T1, T2>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/maperror(_:)","title":"func mapError<E>((Self.Failure) -> E) -> Publishers.MapError<Self, E>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/max(by:)","title":"func max(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/measureinterval(using:options:)","title":"func measureInterval<S>(using: S, options: S.SchedulerOptions?) -> Publishers.MeasureInterval<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:)-4v3aq","title":"func merge<P>(with: P) -> Publishers.Merge<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:)-ynk0","title":"func merge(with: Self) -> Publishers.MergeMany<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:_:)","title":"func merge<B, C>(with: B, C) -> Publishers.Merge3<Self, B, C>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:_:_:)","title":"func merge<B, C, D>(with: B, C, D) -> Publishers.Merge4<Self, B, C, D>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:_:_:_:)","title":"func merge<B, C, D, E>(with: B, C, D, E) -> Publishers.Merge5<Self, B, C, D, E>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:_:_:_:_:)","title":"func merge<B, C, D, E, F>(with: B, C, D, E, F) -> Publishers.Merge6<Self, B, C, D, E, F>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G>(with: B, C, D, E, F, G) -> Publishers.Merge7<Self, B, C, D, E, F, G>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/merge(with:_:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G, H>(with: B, C, D, E, F, G, H) -> Publishers.Merge8<Self, B, C, D, E, F, G, H>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/min(by:)","title":"func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/multicast(_:)","title":"func multicast<S>(() -> S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/multicast(subject:)","title":"func multicast<S>(subject: S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/output(at:)","title":"func output(at: Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/output(in:)","title":"func output<R>(in: R) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/prefix(_:)","title":"func prefix(Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/prefix(untiloutputfrom:)","title":"func prefix<P>(untilOutputFrom: P) -> Publishers.PrefixUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/prefix(while:)","title":"func prefix(while: (Self.Output) -> Bool) -> Publishers.PrefixWhile<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/prepend(_:)-6a0so","title":"func prepend<P>(P) -> Publishers.Concatenate<P, Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/prepend(_:)-7kch8","title":"func prepend<S>(S) -> Publishers.Concatenate<Publishers.Sequence<S, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/prepend(_:)-9gnwq","title":"func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/print(_:to:)","title":"func print(String, to: TextOutputStream?) -> Publishers.Print<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/receive(on:options:)","title":"func receive<S>(on: S, options: S.SchedulerOptions?) -> Publishers.ReceiveOn<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/reduce(_:_:)","title":"func reduce<T>(T, (T, Self.Output) -> T) -> Publishers.Reduce<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Output, Self.Output) -> Bool) -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/replaceempty(with:)","title":"func replaceEmpty(with: Self.Output) -> Publishers.ReplaceEmpty<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Publishers.ReplaceError<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/replacenil(with:)","title":"func replaceNil<T>(with: T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/retry(_:)","title":"func retry(Int) -> Publishers.Retry<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/scan(_:_:)","title":"func scan<T>(T, (T, Self.Output) -> T) -> Publishers.Scan<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/share()","title":"func share() -> Publishers.Share<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/sink(receivecompletion:receivevalue:)","title":"func sink(receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void), receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/subscribe(_:)-1sl3c","title":"func subscribe<S>(S) -> AnyCancellable","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/subscribe(_:)-8kig4","title":"func subscribe<S>(S)","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/subscribe(on:options:)","title":"func subscribe<S>(on: S, options: S.SchedulerOptions?) -> Publishers.SubscribeOn<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/throttle(for:scheduler:latest:)","title":"func throttle<S>(for: S.SchedulerTimeType.Stride, scheduler: S, latest: Bool) -> Publishers.Throttle<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/timeout(_:scheduler:options:customerror:)","title":"func timeout<S>(S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?, customError: (() -> Self.Failure)?) -> Publishers.Timeout<Self, S>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/tryallsatisfy(_:)","title":"func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trycatch(_:)","title":"func tryCatch<P>((Self.Failure) throws -> P) -> Publishers.TryCatch<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trycompactmap(_:)","title":"func tryCompactMap<T>((Self.Output) throws -> T?) -> Publishers.TryCompactMap<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trycontains(where:)","title":"func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trydrop(while:)","title":"func tryDrop(while: (Self.Output) throws -> Bool) -> Publishers.TryDropWhile<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/tryfilter(_:)","title":"func tryFilter((Self.Output) throws -> Bool) -> Publishers.TryFilter<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/tryfirst(where:)","title":"func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trylast(where:)","title":"func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trymap(_:)","title":"func tryMap<T>((Self.Output) throws -> T) -> Publishers.TryMap<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trymax(by:)","title":"func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/trymin(by:)","title":"func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/tryprefix(while:)","title":"func tryPrefix(while: (Self.Output) throws -> Bool) -> Publishers.TryPrefixWhile<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/tryreduce(_:_:)","title":"func tryReduce<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryReduce<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/tryremoveduplicates(by:)","title":"func tryRemoveDuplicates(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryRemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/tryscan(_:_:)","title":"func tryScan<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryScan<Self, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/zip(_:)","title":"func zip<P>(P) -> Publishers.Zip<Self, P>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/zip(_:_:)-673l4","title":"func zip<P, Q>(P, Q) -> Publishers.Zip3<Self, P, Q>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/zip(_:_:)-93c4a","title":"func zip<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.Zip<Self, P>, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/zip(_:_:_:)-6x1k7","title":"func zip<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.Zip3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/zip(_:_:_:)-8sixc","title":"func zip<P, Q, R>(P, Q, R) -> Publishers.Zip4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/nuke\/imagepublisher\/zip(_:_:_:_:)","title":"func zip<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.Zip4<Self, P, Q, R>, T>","type":"method"}],"path":"\/documentation\/nuke\/imagepublisher\/publisher-implementations","title":"Publisher Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagepublisher","title":"ImagePublisher","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/init(rawvalue:)","title":"init(rawValue: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/rawvalue","title":"let rawValue: UInt16","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/disablediskcache","title":"static let disableDiskCache: Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/disablediskcachereads","title":"static let disableDiskCacheReads: ImageRequest.Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/disablediskcachewrites","title":"static let disableDiskCacheWrites: ImageRequest.Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/disablememorycache","title":"static let disableMemoryCache: Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/disablememorycachereads","title":"static let disableMemoryCacheReads: ImageRequest.Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/disablememorycachewrites","title":"static let disableMemoryCacheWrites: ImageRequest.Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/reloadignoringcacheddata","title":"static let reloadIgnoringCachedData: Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/returncachedatadontload","title":"static let returnCacheDataDontLoad: ImageRequest.Options","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagerequest\/options-swift.struct","title":"ImageRequest.Options","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/init(maxpixelsize:createthumbnailfromimageifabsent:createthumbnailfromimagealways:createthumbnailwithtransform:shouldcacheimmediately:)","title":"init(maxPixelSize: CGFloat, createThumbnailFromImageIfAbsent: Bool, createThumbnailFromImageAlways: Bool, createThumbnailWithTransform: Bool, shouldCacheImmediately: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/createthumbnailfromimagealways","title":"var createThumbnailFromImageAlways: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/createthumbnailfromimageifabsent","title":"var createThumbnailFromImageIfAbsent: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/createthumbnailwithtransform","title":"var createThumbnailWithTransform: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/maxpixelsize","title":"var maxPixelSize: CGFloat","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/shouldcacheimmediately","title":"var shouldCacheImmediately: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagerequest\/thumbnailoptions","title":"ImageRequest.ThumbnailOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/imageidkey","title":"static let imageIdKey: ImageRequest.UserInfoKey","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/scalekey","title":"static let scaleKey: ImageRequest.UserInfoKey","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/thumbnailkey","title":"static let thumbnailKey: ImageRequest.UserInfoKey","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/nuke\/imagerequest\/userinfokey\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagerequest\/userinfokey","title":"ImageRequest.UserInfoKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/init(id:data:processors:priority:options:userinfo:)","title":"init<P>(id: String, data: P, processors: [ImageProcessing], priority: Priority, options: Options, userInfo: [UserInfoKey : Any]?)","type":"init"},{"path":"\/documentation\/nuke\/imagerequest\/init(url:processors:priority:options:userinfo:)","title":"init(url: URL?, processors: [ImageProcessing], priority: Priority, options: Options, userInfo: [UserInfoKey : Any]?)","type":"init"},{"path":"\/documentation\/nuke\/imagerequest\/init(urlrequest:processors:priority:options:userinfo:)","title":"init(urlRequest: URLRequest, processors: [ImageProcessing], priority: Priority, options: Options, userInfo: [UserInfoKey : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/imageid","title":"var imageId: String?","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/options-swift.property","title":"var options: Options","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.property","title":"var priority: Priority","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/processors","title":"var processors: [ImageProcessing]","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/url","title":"var url: URL?","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/urlrequest","title":"var urlRequest: URLRequest?","type":"property"},{"path":"\/documentation\/nuke\/imagerequest\/userinfo","title":"var userInfo: [UserInfoKey : Any]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/_(_:_:)-8opf9","title":"static func < (Priority, Priority) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/veryhigh","title":"case veryHigh","type":"case"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/verylow","title":"case veryLow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'...(_:)-2pn3k","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'...(_:)-745of","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'...(_:)-2pn3k","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'...(_:)-745of","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/_(_:_:)-21gg","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/_=(_:_:)-209in","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/_=(_:_:)-2xdro","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagerequest\/priority-swift.enum","title":"ImageRequest.Priority","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagerequest\/asimagerequest()","title":"func asImageRequest() -> ImageRequest","type":"method"}],"path":"\/documentation\/nuke\/imagerequest\/imagerequestconvertible-implementations","title":"ImageRequestConvertible Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagerequest","title":"ImageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageresponse\/init(container:urlresponse:cachetype:)","title":"init(container: ImageContainer, urlResponse: URLResponse?, cacheType: CacheType?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageresponse\/cachetype-swift.property","title":"let cacheType: CacheType?","type":"property"},{"path":"\/documentation\/nuke\/imageresponse\/container","title":"let container: ImageContainer","type":"property"},{"path":"\/documentation\/nuke\/imageresponse\/image","title":"var image: UIImage","type":"property"},{"path":"\/documentation\/nuke\/imageresponse\/urlresponse","title":"let urlResponse: URLResponse?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageresponse\/cachetype-swift.enum\/disk","title":"case disk","type":"case"},{"path":"\/documentation\/nuke\/imageresponse\/cachetype-swift.enum\/memory","title":"case memory","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageresponse\/cachetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageresponse\/cachetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageresponse\/cachetype-swift.enum","title":"ImageResponse.CacheType","type":"enum"}],"path":"\/documentation\/nuke\/imageresponse","title":"ImageResponse","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/nuke\/cancelrequest(for:)","title":"func cancelRequest(for: ImageDisplayingView)","type":"func"},{"path":"\/documentation\/nuke\/loadimage(with:options:into:completion:)","title":"func loadImage(with: ImageRequestConvertible?, options: ImageLoadingOptions, into: ImageDisplayingView, completion: (_ result: Result<ImageResponse, ImagePipeline.Error>) -> Void) -> ImageTask?","type":"func"},{"path":"\/documentation\/nuke\/loadimage(with:options:into:progress:completion:)","title":"func loadImage(with: ImageRequestConvertible?, options: ImageLoadingOptions, into: ImageDisplayingView, progress: ((_ response: ImageResponse?, _ completed: Int64, _ total: Int64) -> Void)?, completion: ((_ result: Result<ImageResponse, ImagePipeline.Error>) -> Void)?) -> ImageTask?","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedisplayingview","title":"ImageDisplayingView","type":"typealias"},{"path":"\/documentation\/nuke\/imagetype","title":"ImageType","type":"typealias"},{"path":"\/documentation\/nuke\/platformimage","title":"PlatformImage","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/datataskevent\/completed(error:)","title":"case completed(error: Error?)","type":"case"},{"path":"\/documentation\/nuke\/datataskevent\/receiveddata(data:)","title":"case receivedData(data: Data)","type":"case"},{"path":"\/documentation\/nuke\/datataskevent\/receivedresponse(response:)","title":"case receivedResponse(response: URLResponse)","type":"case"},{"path":"\/documentation\/nuke\/datataskevent\/resumed","title":"case resumed","type":"case"}],"path":"\/documentation\/nuke\/datataskevent","title":"DataTaskEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimageerror\/sourceempty","title":"case sourceEmpty","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimageerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/fetchimageerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/fetchimageerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nuke\/fetchimageerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/fetchimageerror","title":"FetchImageError","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/init()","title":"init()","type":"init"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/init(data:context:)","title":"init?(data: Data, context: ImageDecodingContext)","type":"init"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/init(partiallydownloadeddata:context:)-1fag0","title":"init?(partiallyDownloadedData: Data, context: ImageDecodingContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/isasynchronous-9ih7f","title":"var isAsynchronous: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/decode(_:)","title":"func decode(Data) -> ImageContainer?","type":"method"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/decodepartiallydownloadeddata(_:)","title":"func decodePartiallyDownloadedData(Data) -> ImageContainer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/init(partiallydownloadeddata:context:)-8hihv","title":"init?(partiallyDownloadedData: Data, context: ImageDecodingContext)","type":"init"}],"path":"\/documentation\/nuke\/imagedecoders\/default\/imagedecoderregistering-implementations","title":"ImageDecoderRegistering Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/default\/isasynchronous-kpmz","title":"var isAsynchronous: Bool","type":"property"}],"path":"\/documentation\/nuke\/imagedecoders\/default\/imagedecoding-implementations","title":"ImageDecoding Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagedecoders\/default","title":"ImageDecoders.Default","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/video\/init(data:context:)","title":"init?(data: Data, context: ImageDecodingContext)","type":"init"},{"path":"\/documentation\/nuke\/imagedecoders\/video\/init(partiallydownloadeddata:context:)-85y2m","title":"init?(partiallyDownloadedData: Data, context: ImageDecodingContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/video\/isasynchronous-3ep70","title":"var isAsynchronous: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/video\/decode(_:)","title":"func decode(Data) -> ImageContainer?","type":"method"},{"path":"\/documentation\/nuke\/imagedecoders\/video\/decodepartiallydownloadeddata(_:)","title":"func decodePartiallyDownloadedData(Data) -> ImageContainer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/video\/init(partiallydownloadeddata:context:)-3ssam","title":"init?(partiallyDownloadedData: Data, context: ImageDecodingContext)","type":"init"}],"path":"\/documentation\/nuke\/imagedecoders\/video\/imagedecoderregistering-implementations","title":"ImageDecoderRegistering Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/video\/isasynchronous-2dmg5","title":"var isAsynchronous: Bool","type":"property"}],"path":"\/documentation\/nuke\/imagedecoders\/video\/imagedecoding-implementations","title":"ImageDecoding Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagedecoders\/video","title":"ImageDecoders.Video","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/empty\/init(assettype:isprogressive:)","title":"init(assetType: AssetType?, isProgressive: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/empty\/isasynchronous-38kui","title":"var isAsynchronous: Bool","type":"property"},{"path":"\/documentation\/nuke\/imagedecoders\/empty\/isprogressive","title":"let isProgressive: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/empty\/decode(_:)","title":"func decode(Data) -> ImageContainer?","type":"method"},{"path":"\/documentation\/nuke\/imagedecoders\/empty\/decodepartiallydownloadeddata(_:)","title":"func decodePartiallyDownloadedData(Data) -> ImageContainer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagedecoders\/empty\/isasynchronous-9vmys","title":"var isAsynchronous: Bool","type":"property"}],"path":"\/documentation\/nuke\/imagedecoders\/empty\/imagedecoding-implementations","title":"ImageDecoding Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imagedecoders\/empty","title":"ImageDecoders.Empty","type":"struct"}],"path":"\/documentation\/nuke\/imagedecoders","title":"ImageDecoders","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/default\/init(compressionquality:)","title":"init(compressionQuality: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/default\/compressionquality","title":"var compressionQuality: Float","type":"property"},{"path":"\/documentation\/nuke\/imageencoders\/default\/isheifpreferred","title":"var isHEIFPreferred: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/default\/encode(_:)","title":"func encode(PlatformImage) -> Data?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/default\/encode(_:context:)","title":"func encode(ImageContainer, context: ImageEncodingContext) -> Data?","type":"method"}],"path":"\/documentation\/nuke\/imageencoders\/default\/imageencoding-implementations","title":"ImageEncoding Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageencoders\/default","title":"ImageEncoders.Default","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/imageio\/init(type:compressionratio:)","title":"init(type: AssetType, compressionRatio: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/imageio\/compressionratio","title":"let compressionRatio: Float","type":"property"},{"path":"\/documentation\/nuke\/imageencoders\/imageio\/type","title":"let type: AssetType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/imageio\/encode(_:)","title":"func encode(PlatformImage) -> Data?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/imageio\/issupported(type:)","title":"static func isSupported(type: AssetType) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageencoders\/imageio\/encode(_:context:)","title":"func encode(ImageContainer, context: ImageEncodingContext) -> Data?","type":"method"}],"path":"\/documentation\/nuke\/imageencoders\/imageio\/imageencoding-implementations","title":"ImageEncoding Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageencoders\/imageio","title":"ImageEncoders.ImageIO","type":"struct"}],"path":"\/documentation\/nuke\/imageencoders","title":"ImageEncoders","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/border\/init(color:width:unit:)","title":"init(color: UIColor, width: CGFloat, unit: Unit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/border\/color","title":"let color: UIColor","type":"property"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/border\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/border\/width","title":"let width: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/border\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessingoptions\/border\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessingoptions\/border","title":"ImageProcessingOptions.Border","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/unit\/pixels","title":"case pixels","type":"case"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/unit\/points","title":"case points","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/unit\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessingoptions\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessingoptions\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessingoptions\/unit","title":"ImageProcessingOptions.Unit","type":"enum"}],"path":"\/documentation\/nuke\/imageprocessingoptions","title":"ImageProcessingOptions","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/init(id:_:)","title":"init(id: String, (PlatformImage) -> PlatformImage?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/identifier","title":"let identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/hashableidentifier","title":"var hashableIdentifier: AnyHashable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/process(_:context:)","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/process(id:_:)","title":"static func process(id: String, (PlatformImage) -> PlatformImage?) -> ImageProcessors.Anonymous","type":"method"}],"path":"\/documentation\/nuke\/imageprocessors\/anonymous\/imageprocessing-implementations","title":"ImageProcessing Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/anonymous","title":"ImageProcessors.Anonymous","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/init(border:)","title":"init(border: ImageProcessingOptions.Border?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/hashableidentifier-6yyny","title":"var hashableIdentifier: AnyHashable","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessors\/circle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/hashableidentifier-80tsz","title":"var hashableIdentifier: AnyHashable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/process(_:context:)","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/circle\/circle(border:)","title":"static func circle(border: ImageProcessingOptions.Border?) -> ImageProcessors.Circle","type":"method"}],"path":"\/documentation\/nuke\/imageprocessors\/circle\/imageprocessing-implementations","title":"ImageProcessing Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/circle","title":"ImageProcessors.Circle","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/==(_:_:)","title":"static func == (Composition, Composition) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/init(_:)","title":"init([ImageProcessing])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/hashableidentifier-7sumc","title":"var hashableIdentifier: AnyHashable","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/process(_:context:)","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessors\/composition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/composition\/hashableidentifier-2rvn5","title":"var hashableIdentifier: AnyHashable","type":"property"}],"path":"\/documentation\/nuke\/imageprocessors\/composition\/imageprocessing-implementations","title":"ImageProcessing Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/composition","title":"ImageProcessors.Composition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/init(name:)","title":"init(name: String)","type":"init"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/init(name:parameters:identifier:)","title":"init(name: String, parameters: [String : Any], identifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/identifier","title":"let identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/context","title":"static var context: CIContext","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/apply(filter:to:)","title":"static func apply(filter: CIFilter?, to: PlatformImage) -> PlatformImage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/hashableidentifier","title":"var hashableIdentifier: AnyHashable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/process(_:context:)","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/coreimagefilter(name:)","title":"static func coreImageFilter(name: String) -> ImageProcessors.CoreImageFilter","type":"method"},{"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/coreimagefilter(name:parameters:identifier:)","title":"static func coreImageFilter(name: String, parameters: [String : Any], identifier: String) -> ImageProcessors.CoreImageFilter","type":"method"}],"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter\/imageprocessing-implementations","title":"ImageProcessing Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/coreimagefilter","title":"ImageProcessors.CoreImageFilter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/init(radius:)","title":"init(radius: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/hashableidentifier-90m1o","title":"var hashableIdentifier: AnyHashable","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/hashableidentifier-18jc5","title":"var hashableIdentifier: AnyHashable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/process(_:context:)","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/gaussianblur(radius:)","title":"static func gaussianBlur(radius: Int) -> ImageProcessors.GaussianBlur","type":"method"}],"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur\/imageprocessing-implementations","title":"ImageProcessing Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/gaussianblur","title":"ImageProcessors.GaussianBlur","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/init(height:unit:upscale:)","title":"init(height: CGFloat, unit: ImageProcessingOptions.Unit, upscale: Bool)","type":"init"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/init(size:unit:contentmode:crop:upscale:)","title":"init(size: CGSize, unit: ImageProcessingOptions.Unit, contentMode: ContentMode, crop: Bool, upscale: Bool)","type":"init"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/init(width:unit:upscale:)","title":"init(width: CGFloat, unit: ImageProcessingOptions.Unit, upscale: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/hashableidentifier-6oy0p","title":"var hashableIdentifier: AnyHashable","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/contentmode\/aspectfill","title":"case aspectFill","type":"case"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/contentmode\/aspectfit","title":"case aspectFit","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/contentmode\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/contentmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessors\/resize\/contentmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/resize\/contentmode","title":"ImageProcessors.Resize.ContentMode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessors\/resize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/hashableidentifier-6hpdz","title":"var hashableIdentifier: AnyHashable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/process(_:context:)","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/resize(height:unit:upscale:)","title":"static func resize(height: CGFloat, unit: ImageProcessingOptions.Unit, upscale: Bool) -> ImageProcessors.Resize","type":"method"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/resize(size:unit:contentmode:crop:upscale:)","title":"static func resize(size: CGSize, unit: ImageProcessingOptions.Unit, contentMode: ImageProcessors.Resize.ContentMode, crop: Bool, upscale: Bool) -> ImageProcessors.Resize","type":"method"},{"path":"\/documentation\/nuke\/imageprocessors\/resize\/resize(width:unit:upscale:)","title":"static func resize(width: CGFloat, unit: ImageProcessingOptions.Unit, upscale: Bool) -> ImageProcessors.Resize","type":"method"}],"path":"\/documentation\/nuke\/imageprocessors\/resize\/imageprocessing-implementations","title":"ImageProcessing Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/resize","title":"ImageProcessors.Resize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/init(radius:unit:border:)","title":"init(radius: CGFloat, unit: ImageProcessingOptions.Unit, border: ImageProcessingOptions.Border?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/hashableidentifier-9msy0","title":"var hashableIdentifier: AnyHashable","type":"property"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/process(_:)","title":"func process(PlatformImage) -> PlatformImage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/hashableidentifier-35mju","title":"var hashableIdentifier: AnyHashable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/process(_:context:)","title":"func process(ImageContainer, context: ImageProcessingContext) -> ImageContainer?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/roundedcorners(radius:unit:border:)","title":"static func roundedCorners(radius: CGFloat, unit: ImageProcessingOptions.Unit, border: ImageProcessingOptions.Border?) -> ImageProcessors.RoundedCorners","type":"method"}],"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners\/imageprocessing-implementations","title":"ImageProcessing Implementations","type":"symbol"}],"path":"\/documentation\/nuke\/imageprocessors\/roundedcorners","title":"ImageProcessors.RoundedCorners","type":"struct"}],"path":"\/documentation\/nuke\/imageprocessors","title":"ImageProcessors","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nuke\/imagetaskevent\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/nuke\/imagetaskevent\/completed(result:)","title":"case completed(result: Result<ImageResponse, ImagePipeline.Error>)","type":"case"},{"path":"\/documentation\/nuke\/imagetaskevent\/intermediateresponsereceived(response:)","title":"case intermediateResponseReceived(response: ImageResponse)","type":"case"},{"path":"\/documentation\/nuke\/imagetaskevent\/priorityupdated(priority:)","title":"case priorityUpdated(priority: ImageRequest.Priority)","type":"case"},{"path":"\/documentation\/nuke\/imagetaskevent\/progressupdated(completedunitcount:totalunitcount:)","title":"case progressUpdated(completedUnitCount: Int64, totalUnitCount: Int64)","type":"case"},{"path":"\/documentation\/nuke\/imagetaskevent\/started","title":"case started","type":"case"}],"path":"\/documentation\/nuke\/imagetaskevent","title":"ImageTaskEvent","type":"enum"}],"path":"\/documentation\/nuke","title":"Nuke","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}