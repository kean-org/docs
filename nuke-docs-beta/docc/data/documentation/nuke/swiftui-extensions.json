{"seeAlsoSections":[{"title":"Basics","identifiers":["doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/image-view-extensions","doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/customizing-requests","doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/image-processing","doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/image-pipeline"],"generated":true}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"LazyImage"},{"type":"text","text":" (a View) which is part of the "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/kean\/NukeUI"},{"type":"text","text":" package"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/FetchImage"},{"type":"text","text":" (a ViewModel) which is part of Nuke"}]}]}]},{"anchor":"LazyImage","level":2,"type":"heading","text":"LazyImage"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"LazyImage"},{"type":"text","text":" which is part of the "},{"overridingTitleInlineContent":[{"type":"text","text":"NukeUI"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kean\/NukeUI","overridingTitle":"NukeUI"},{"type":"text","text":" package that should be installed separately."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"LazyImage"},{"type":"text","text":" uses "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/kean\/Nuke"},{"type":"text","text":" for loading images and has many customization options. But it’s not just that. It also supports progressive images, it has GIF support powered by "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/kaishin\/Gifu"},{"type":"text","text":" and can even play short videos, which is "},{"type":"reference","isActive":true,"identifier":"https:\/\/web.dev\/replace-gifs-with-videos\/"},{"type":"text","text":" to display animated images."}]},{"type":"codeListing","syntax":"swift","code":["struct ProfileView: View {","    var body: some View {","        LazyImage(source: \"https:\/\/example.com\/image.jpeg\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can learn more about "},{"type":"codeVoice","code":"LazyImage"},{"type":"text","text":" in the "},{"overridingTitleInlineContent":[{"type":"text","text":"NukeUI"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kean\/NukeUI","overridingTitle":"NukeUI"},{"type":"text","text":" repo."}]},{"anchor":"FetchImage","level":2,"type":"heading","text":"FetchImage"},{"anchor":"Custom-Image-View","level":3,"type":"heading","text":"Custom Image View"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"type":"codeVoice","code":"LazyImage"},{"type":"text","text":" is part of a separate "},{"overridingTitleInlineContent":[{"type":"text","text":"package"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kean\/NukeUI","overridingTitle":"package"},{"type":"text","text":", the core framework contains a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/FetchImage"},{"type":"text","text":" class. You can think of it as a ViewModel for your views."}]},{"type":"codeListing","syntax":"swift","code":["struct ImageView: View {","    let url: URL","","    @StateObject private var image = FetchImage()","","    var body: some View {","        ZStack {","            Rectangle().fill(Color.gray)","            image.view?","                .resizable()","                .aspectRatio(contentMode: .fill)","                .clipped()","        }","        .onAppear { image.load(url) }","        .onChange(of: url) { image.load($0) }","        .onDisappear(perform: image.reset)","    }","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In iOS 13, use "},{"type":"codeVoice","code":"@ObservedObject"},{"type":"text","text":". Keep in mind that it doesn’t own the object."}]}]},{"anchor":"ViewModel","level":3,"type":"heading","text":"ViewModel"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/FetchImage"},{"type":"text","text":" is an observable object ("},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":") that allows you to manage the download of an image and observe the download status."}]},{"type":"codeListing","syntax":"swift","code":["public final class FetchImage: ObservableObject, Identifiable {","","    \/\/\/ Returns the current fetch result.","    @Published public private(set)","    var result: Result<ImageResponse, ImagePipeline.Error>?","","    \/\/\/ Returns the fetched image.","    \/\/\/","    \/\/\/ - note: In case pipeline has `isProgressiveDecodingEnabled` option enabled","    \/\/\/ and the image being downloaded supports progressive decoding, the `image`","    \/\/\/ might be updated multiple times during the download.","    @Published public private(set)","    var image: UIImage?","","    \/\/\/ Returns `true` if the image is being loaded.","    @Published public private(set)","    var isLoading: Bool = false","","    \/\/\/ The progress of the image download.","    @Published public private(set)","    var progress = Progress()","}"]},{"anchor":"List","level":3,"type":"heading","text":"List"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage with a list:"}]},{"type":"codeListing","syntax":"swift","code":["struct DetailsView: View {","    var body: some View {","        List(imageUrls, id: \\.self) {","            ImageView(url: $0)","                .frame(height: 200)","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/FetchImage"},{"type":"text","text":" gives you full control over how to manage the download and how to display the image. For example, if you want the download to continue when the view leaves the screen, change the appearance callbacks accordingly."}]},{"type":"codeListing","syntax":"swift","code":["struct ImageView: View {","    let url: URL","","    @StateObject private var image = FetchImage()","","    var body: some View {","        \/\/ ...","        .onAppear {","            image.priority = .normal","            image.load(url)","        }","        .onDisappear {","            image.priority = .low","        }","    }","}"]},{"anchor":"Animations","level":3,"type":"heading","text":"Animations"},{"type":"codeListing","syntax":"swift","code":["struct ImageView: View {","    let url: URL","","    @StateObject private var image = FetchImage()","","    var body: some View {","        \/\/ ... create image view ","        .onAppear {","            \/\/ Ensure that memory cache lookup is performed without animations","            withoutAnimation {","                image.load(url)","            }","        }","        .onDisappear(perform: image.reset)","        .animation(.default)","    }","}","","private func withoutAnimation(_ closure: () -> Void) {","    var transaction = Transaction(animation: nil)","    transaction.disablesAnimations = true","    withTransaction(transaction, closure)","}"]},{"anchor":"Grid","level":3,"type":"heading","text":"Grid"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ImageView"},{"type":"text","text":" defined earlier can also be used in grids."}]},{"type":"codeListing","syntax":"swift","code":["struct GridExampleView: View {","    var body: some View {","        GeometryReader { geometry in","            ScrollView {","                let side = geometry.size.width \/ 4","                let item = GridItem(.fixed(side), spacing: 2)","                LazyVGrid(columns: Array(repeating: item, count: 4), spacing: 2) {","                    ForEach(demoPhotosURLs.indices) {","                        ImageView(url: demoPhotosURLs[$0])","                            .frame(width: side, height: side)","                            .clipped()","                    }","                }","            }","        }","    }","}"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To see grid in action, check out the "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/kean\/NukeDemo"},{"type":"text","text":"."}]}]},{"anchor":"Combine","level":3,"type":"heading","text":"Combine"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use Combine support ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/ImagePublisher"},{"type":"text","text":") to create a custom image publisher, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/FetchImage"},{"type":"text","text":" provides a simple way to display the resuling image."}]},{"type":"codeListing","syntax":"swift","code":["let image = FetchImage()","let publisher = pipeline.imagePublisher(with: \"https:\/\/example.com\/image.jpeg\")","image.load(publisher)"]}]}],"variants":[{"paths":["\/documentation\/nuke\/swiftui-extensions"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/swiftui-extensions","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Nuke provides first-class SwiftUI support via two components:"}],"kind":"article","metadata":{"roleHeading":"Article","title":"SwiftUI","role":"article","modules":[{"name":"Nuke"}]},"hierarchy":{"paths":[["doc:\/\/com.github.kean.Nuke\/documentation\/Nuke"]]},"documentVersion":0,"references":{"doc://com.github.kean.Nuke/documentation/Nuke/image-view-extensions":{"role":"article","title":"Image View Extensions","abstract":[{"type":"text","text":"Nuke provides convenience extension for image views with multiple options to control the image view extensions behavior."}],"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/image-view-extensions","kind":"article","type":"topic","url":"\/documentation\/nuke\/image-view-extensions"},"https://github.com/kean/Nuke":{"title":"Nuke","titleInlineContent":[{"type":"text","text":"Nuke"}],"type":"link","identifier":"https:\/\/github.com\/kean\/Nuke","url":"https:\/\/github.com\/kean\/Nuke"},"doc://com.github.kean.Nuke/documentation/Nuke/FetchImage":{"role":"symbol","title":"FetchImage","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchImage"}],"abstract":[{"type":"text","text":"An observable object that simplifies image loading in SwiftUI."}],"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/FetchImage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FetchImage"}],"url":"\/documentation\/nuke\/fetchimage"},"doc://com.github.kean.Nuke/documentation/Nuke/customizing-requests":{"role":"article","title":"Image Requests","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/ImageRequest"},{"type":"text","text":" allows you to set image processors, change the request priority, and more."}],"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/customizing-requests","kind":"article","type":"topic","url":"\/documentation\/nuke\/customizing-requests"},"doc://com.github.kean.Nuke/documentation/Nuke":{"role":"collection","title":"Nuke","abstract":[{"type":"text","text":"Welcome to the documentation for Nuke, an image loading system for Apple platforms."}],"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke","kind":"symbol","type":"topic","url":"\/documentation\/nuke"},"doc://com.github.kean.Nuke/documentation/Nuke/image-processing":{"role":"article","title":"Image Processing","abstract":[{"type":"text","text":"Nuke features a powerful and efficient image processing infrastructure with multiple built-in processors and an API for creating custom ones. The built-in processors can all be found in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/ImageProcessors"},{"type":"text","text":" namespace."}],"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/image-processing","kind":"article","type":"topic","url":"\/documentation\/nuke\/image-processing"},"doc://com.github.kean.Nuke/documentation/Nuke/image-pipeline":{"role":"article","title":"Image Pipeline","abstract":[{"type":"text","text":"At the core of Nuke is the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/ImagePipeline"},{"type":"text","text":" class that you can use to load images directly. While built-in UI extensions have a rich set of APIs, they still can’t cover all scenarios. And this is where the pipeline comes in."}],"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/image-pipeline","kind":"article","type":"topic","url":"\/documentation\/nuke\/image-pipeline"},"https://github.com/kean/NukeUI":{"title":"NukeUI","titleInlineContent":[{"type":"text","text":"NukeUI"}],"type":"link","identifier":"https:\/\/github.com\/kean\/NukeUI","url":"https:\/\/github.com\/kean\/NukeUI"},"https://github.com/kaishin/Gifu":{"title":"Gifu","titleInlineContent":[{"type":"text","text":"Gifu"}],"type":"link","identifier":"https:\/\/github.com\/kaishin\/Gifu","url":"https:\/\/github.com\/kaishin\/Gifu"},"https://github.com/kean/NukeDemo":{"title":"demo project","titleInlineContent":[{"type":"text","text":"demo project"}],"type":"link","identifier":"https:\/\/github.com\/kean\/NukeDemo","url":"https:\/\/github.com\/kean\/NukeDemo"},"doc://com.github.kean.Nuke/documentation/Nuke/ImagePublisher":{"role":"symbol","title":"ImagePublisher","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImagePublisher"}],"abstract":[{"type":"text","text":"A publisher that starts a new "},{"type":"codeVoice","code":"ImageTask"},{"type":"text","text":" when a subscriber is added."}],"identifier":"doc:\/\/com.github.kean.Nuke\/documentation\/Nuke\/ImagePublisher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImagePublisher"}],"url":"\/documentation\/nuke\/imagepublisher"},"https://web.dev/replace-gifs-with-videos/":{"title":"a much more efficient","titleInlineContent":[{"type":"text","text":"a much more efficient"}],"type":"link","identifier":"https:\/\/web.dev\/replace-gifs-with-videos\/","url":"https:\/\/web.dev\/replace-gifs-with-videos\/"}}}